@using Crif.It.Models;
@using Umbraco.Cms.Web.Common.PublishedModels;
@using Crif.It.Utils;
@using ContentModels = Crif.It.Models;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<StorieDiSuccesso>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
	Layout = "NewMaster.cshtml";
	var articoli = Model?.Children()?.Where(x => x.ContentType.Alias == "articoloStorieDiSuccesso");
	var articoliOrdinati = articoli?.OrderByDescending(articoli => articoli.Value("dataCustom"));
}
@* <section class="textonly-heading pb-lg-3">
	<div class="container-lg">
		<div class="row">
			<div class="col-12 banner">
				<div class="caption">
					@await (Html.PartialAsync("Breadcrumb", Umbraco.AssignedContentItem))
					<h1 class="h1 fade-in-box">@Model?.TitoloHero</h1>
					<p class="big-text fade-in-box">@Model?.DescrizioneHero</p>
				</div>
			</div>
		</div>
	</div>
</section> *@
<main>
    @Html.GetBlockListHtml(Model?.Blocchi)
</main>

@if(Model!=null && Model.MostrareListing && articoli!=null && articoli.Any() && articoliOrdinati!=null && articoliOrdinati.Any()){
	int numCard = (Model?.NumeroCard != null && Model?.NumeroCard != 0) ? Model.NumeroCard : 9;
	var page = 1; int.TryParse(HttpContextAccessor?.HttpContext?.Request.Query["page1"], out page);
	 var totalPages = (int)Math.Ceiling((double)articoli.Count() / (double)numCard);
	if (page > totalPages)
    {
        page = totalPages;
    }
    else if (page < 1)
    {
        page = 1;
    }
	    <section class="vertical-cards-block bg pb-80" data-section="@Model?.TitoloSezioneListing">
        <div class="container-lg">
            @if (!string.IsNullOrEmpty(Model?.TitoloSezioneListing))
            {
                <div class="row justify-content-center">
                    <div class="col-12">
                        <h2 class="h2 text-center pb-lg-5 mb-lg-4">@Model.TitoloSezioneListing</h2>
                    </div>
                </div>
            }
            <div class="row g-large">
                @foreach (ArticoloStorieDiSuccesso art in articoliOrdinati.Skip((page - 1) * numCard).Take(numCard))
                {
                    @(await Html.PartialAsync("cardStorieSuccesso", art, new ViewDataDictionary(ViewData) { { "list", "main" },{"section",@Model?.TitoloSezioneListing} }))
                }
                @if (totalPages > 1)
                {
                    <div class="row pt-4 mt-2 mt-lg-0">
                        @(await Html.PartialAsync("Pagination", new PagModel { PageIndex = (int)page, TotalCount = (int)totalPages, RequestParameter = "page1" }))
                    </div>
                }
            </div>
        </div>

    </section>
	@Html.GetBlockListHtml(Model?.AltriBlocchi)
}