@using Umbraco.Forms.Core.Enums
@using Umbraco.Forms.Web
@using Umbraco.Forms.Web.Models
@using Umbraco.Forms.Web.Services

@model Umbraco.Forms.Web.Models.FormViewModel

@inject IFormThemeResolver FormThemeResolver

@{
	// here we load in the needed default assets for the form
	// this means that 3rd party themes can override these by implementing their own form.cshtml file
	//it will simply hook into standard way forms load assets
	if (Model.DisableDefaultStylesheet == false)
	{
		Html.SetFormThemeCssFile("~/App_Plugins/UmbracoForms/Assets/themes/default/style.css");
	}
	//define all the fields alias that will be displayed fullwidth in the Contact Form 
	List<string> specialFieldsAlias = new List<string> { "serviceType", "requestType", "informazioni", "richiesta" };
	List<string> checkBoxes = new List<string> { "dataConsent", "consensoMarketing", "consensoNewsletter" };
}

@if (Model.CurrentPage != null)
{
	if(Model.CurrentPage.Caption == "Form Contatti")
	{
	<div class="umbraco-forms-page" id="@Model.CurrentPage.Id">

		@*@if (string.IsNullOrEmpty(Model.CurrentPage?.Caption) == false)
			{
			<h4 class="umbraco-forms-caption">@Model.CurrentPage.Caption</h4>
		}*@

		@if (Model.ShowValidationSummary)
		{
			@Html.ValidationSummary(false)
		}

		@if (Model.CurrentPage != null && Model.CurrentPage.Fieldsets != null && Model.CurrentPage.Fieldsets.Any())
		{
			@foreach (FieldsetViewModel fs in Model.CurrentPage.Fieldsets)
			{
				<fieldset class="umbraco-forms-fieldset" id="@fs.Id">

				@*@if (string.IsNullOrEmpty(fs.Caption) == false)
				{
					<legend>@fs.Caption</legend>
				}*@

					<div class="row-fluid row gx-large">

						@foreach (var c in fs.Containers)
						{
							<div class="umbraco-forms-container col-12 @("col-lg-" + c.Width)">
								<div class="row gx-large">
								@foreach (FieldViewModel f in c.Fields)
								{
									bool hidden = f.HasCondition && f.ConditionActionType == FieldConditionActionType.Show;
									string style = hidden ? "display:none" : "";
									var fieldSize = f.Alias == "serviceType" ? "col-lg-6" : "";
									var columnSize = checkBoxes.Contains(f.Alias) ? "col-12 col-lg-9" : (specialFieldsAlias.Contains(f.Alias) ? "col-12" : "col-12 col-lg-6");
									var extraSpacing = f.Alias == "consensoNewsletter" ? "mt-3" : "";
										<div class="@Html.GetFormFieldWrapperClass(f.FieldTypeName) @f.CssClass @columnSize mb-3 mb-lg-5" style="@style">

											@if (!f.HideLabel)
											{
												<div class="col-12">
													<label for="@f.Id" class="umbraco-forms-label form-label">
														@f.Caption @if (f.ShowIndicator)
														{
															<span class="umbraco-forms-indicator">@Model.Indicator</span>
														}
													</label>
												</div>

											}

											@if (!string.IsNullOrEmpty(f.ToolTip))
											{
												<span class="umbraco-forms-tooltip help-block">@f.ToolTip</span>
											}

											<div class="umbraco-forms-field-wrapper @fieldSize @extraSpacing">

												@await Html.PartialAsync(FormThemeResolver.GetFieldView(Model, f), f)

												@if (Model.ShowFieldValidaton)
												{
													@Html.ValidationMessage(f.Id)
												}
											</div>
										</div>
								}
								</div>
							</div>
						}
					</div>

				</fieldset>
			}
		}


		<div style="display: none" aria-hidden="true">
			<input type="text" name="@Model.FormId.ToString().Replace("-", "")" />
		</div>


		<div class="umbraco-forms-navigation row-fluid row justify-content-end gx-large">

			<div class="col-12 col-lg-3">
				@if (Model.IsMultiPage)
				{
					if (!Model.IsFirstPage)
					{
						<input class="btn prev cancel"
				   type="submit"
				   value="@Model.PreviousCaption"
				   name="__prev"
				   formnovalidate
				   data-umb="prev-forms-form" />
					}

					if (!Model.IsLastPage)
					{
						<input type="submit"
				   class="btn next"
				   value="@Model.NextCaption"
				   name="__next"
				   data-umb="next-forms-form" />
					}

					if (Model.IsLastPage)
					{
						<button name="__next" class="btn btn-primary btn-large w-100" type="submit" data-umb="submit-forms-form">@Model.SubmitCaption</button>
					}
				}
				else
				{
					<button name="__next" class="btn btn-primary btn-large w-100" type="submit" data-umb="submit-forms-form">@Model.SubmitCaption</button>
				}
			</div>
		</div>
		</div>
    }
    else if (Model.FormName == "News Letter Form")
    {
        <form action="">

            @if (string.IsNullOrEmpty(Model.CurrentPage?.Caption) == false)
            {
                <h4 class="umbraco-forms-caption">@Model.CurrentPage.Caption</h4>
            }

            @if (Model.ShowValidationSummary)
            {
                @Html.ValidationSummary(false)
            }
            @if (Model.CurrentPage != null && Model.CurrentPage.Fieldsets != null && Model.CurrentPage.Fieldsets.Any())
            {
                @foreach (FieldsetViewModel fs in Model.CurrentPage.Fieldsets)
                {
                    //var i = 1;
                    @foreach (var c in fs.Containers)
                    {
                        @foreach (FieldViewModel f in c.Fields)
                        {
                            bool hidden = f.HasCondition && f.ConditionActionType == FieldConditionActionType.Show;
                            string style = hidden ? "display:none" : "";
                            @if (!f.HideLabel)
                            {
                                <div class="formFieldWrp mb-0">
                                    <label for="@f.Id">
                                        @f.Caption @if (f.ShowIndicator)
                                        {
                                            @Model.Indicator
                                        }
                                    </label>
                                    @* <label for="name">Enter you email ID</label> *@
                                    <div class="row gx-2 align-items-center justify-content-between">
                                        <div class="col-md-8 ">
                                            @await Html.PartialAsync(FormThemeResolver.GetFieldView(Model, f), f)
                                            @if (Model.ShowFieldValidaton)
                                            {
                                                @Html.ValidationMessage(f.Id)
                                            }
                                        </div>
                                        <div class="col">
                                            <button name="__next" type="submit" class="orangeBtn formBtn" data-umb="submit-forms-form">@Model.SubmitCaption</button>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="formFieldWrp mb-0">
                                    <div class="row gx-2 align-items-center justify-content-between">
                                        <div class="col-md-8 ">
                                            @await Html.PartialAsync(FormThemeResolver.GetFieldView(Model, f), f)
                                            @if (Model.ShowFieldValidaton)
                                            {
                                                @Html.ValidationMessage(f.Id)
                                            }
                                        </div>
                                        <div class="col">
                                            <button name="__next" type="submit" class="orangeBtn formBtn" data-umb="submit-forms-form">@Model.SubmitCaption</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    }
                }
            }




        </form>
    }
	
	else
	{
        <form action="#" method="post" class="mt-5 mt-md-0">
            @if (string.IsNullOrEmpty(Model.CurrentPage?.Caption) == false)
            {
                <h4 class="umbraco-forms-caption">@Model.CurrentPage.Caption</h4>
            }

            @if (Model.ShowValidationSummary)
            {
                @Html.ValidationSummary(false)
            }

            @if (Model.CurrentPage != null && Model.CurrentPage.Fieldsets != null && Model.CurrentPage.Fieldsets.Any())
            {
                @foreach (FieldsetViewModel fs in Model.CurrentPage.Fieldsets)
                {
                    var i = 1;
                    @foreach (var c in fs.Containers)
                    {
                        @foreach (FieldViewModel f in c.Fields)
                        {
                            bool hidden = f.HasCondition && f.ConditionActionType == FieldConditionActionType.Show;
                            string style = hidden ? "display:none" : "";
                            @if (!f.HideLabel)
                            {
                                @if ((@f.FieldType).EditView == "textfield")
                                {
                                    <div class="halfField">
                                        <div class="formFieldWrp">
                                            <label for="@f.Id">
                                                @f.Caption @if (f.ShowIndicator)
                                                {
                                                    @Model.Indicator
                                                }
                                            </label>
                                            @await Html.PartialAsync(FormThemeResolver.GetFieldView(Model, f), f)
                                            @if (Model.ShowFieldValidaton)
                                            {
                                                @Html.ValidationMessage(f.Id)
                                            }
                                        </div>
                                    </div>
                                    i++;
                                }
                                else if ((@f.FieldType).EditView == "radiobuttonlist")
                                {
                                    <div class="formFieldWrp">
                                        <label for="@f.Id">
                                            @f.Caption @if (f.ShowIndicator)
                                            {
                                                @Model.Indicator
                                            }
                                        </label>
                                        @await Html.PartialAsync(FormThemeResolver.GetFieldView(Model, f), f)
                                    </div>

                                }
                                else
                                {
                                    @await Html.PartialAsync(FormThemeResolver.GetFieldView(Model, f), f)
                                }



                            }
                            else
                            {
                                <div class="formFieldWrp">
                                    @await Html.PartialAsync(FormThemeResolver.GetFieldView(Model, f), f)
                                    @if (Model.ShowFieldValidaton)
                                    {
                                        @Html.ValidationMessage(f.Id)
                                    }
                                </div>
                            }
                        }
                    }
                }
            }
            <div class="row">
                @* <div class="col">
        <span>reCAPTCHA</span>
        <div class="reCAPTCHA-contact">
        <label for="check">
        <div class="input-container">
        <input type="checkbox" class="checkbox" id="check">
        <span class="checkbox-text">I'm not a robot</span>
        </div>
        </label>
        <img src="https://www.gstatic.com/recaptcha/api2/logo_48.png">
        <span class="recaptcha">reCAPTCHA</span>
        <br>
        <a href="#">Privacy</a>
        <span class="dash">-</span>
        <a href="#">Terms</a>
        </div>
        </div> *@
                <div class="col pt-4">
                    <button name="__next" type="submit" class="orangeBtn formBtn mx-auto" data-umb="submit-forms-form">@Model.SubmitCaption</button>
                </div>
            </div>
        </form>
	}

}



@await Html.PartialAsync("Forms/Themes/default/ScrollToFormScript")
