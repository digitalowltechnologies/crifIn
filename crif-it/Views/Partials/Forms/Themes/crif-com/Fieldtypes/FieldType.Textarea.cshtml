@model Umbraco.Forms.Web.Models.FieldViewModel
@using Umbraco.Forms.Web

@{
    var autocompleteAttribute = Model.GetSettingValue<string>("AutocompleteAttribute", string.Empty);
    var numberOfRows = Model.GetSettingValue<int>("NumberOfRows", global::Umbraco.Forms.Core.Providers.FieldTypes.Textarea.DefaultNumberOfRows);
    var maxLength = Model.GetSettingValue<int>("MaximumLength", 0);
    var placeholder = (string.IsNullOrEmpty(Model.PlaceholderText) == false) ? Model.PlaceholderText : "";
    var autocomplete = (string.IsNullOrEmpty(autocompleteAttribute) == false) ? autocompleteAttribute : "off";
}
<textarea class="@Html.GetFormFieldClass(Model.FieldTypeName) form-control" name="@Model.Name" id="@Model.Id" data-umb="@Model.Id" rows="@numberOfRows" cols="20"
          placeholder="@placeholder" autocomplete="@autocomplete" 
          @if(maxLength > 0){<text>maxlength="@maxLength"</text>}
          @if((Model.Mandatory || Model.Validate)){<text>data-val="true"</text>}
          @if(Model.Mandatory) {<text>data-val-required="@Model.RequiredErrorMessage"</text>}
          @if(Model.Validate) {<text>data-val-regex="@Model.InvalidErrorMessage" data-val-regex-pattern="@Html.Raw(Model.Regex)"</text>} >
    @Model.ValueAsHtmlString
</textarea>

