@using Crif.It.Utils;
@using Crif.It.Models;
@using System.Globalization;
@using Umbraco.Cms.Core.Models.Blocks;
@using Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models;
@using System.Web;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
    Layout = null;
    CultureInfo ci = new CultureInfo(System.Threading.Thread.CurrentThread.CurrentCulture.Name);

    var cssVer = 5;

    string? metaTitle = (string?)(Model.GetProperty("title")?.GetValue());
    string? metaDescription = (string?)(Model.GetProperty("metaDescription")?.GetValue());
    string? ogTitle = metaTitle;
    var tmp = Model.GetProperty("openGraphTitle")?.GetValue();
    if (!string.IsNullOrEmpty((string?)tmp))
    {
        ogTitle = (string)tmp;
    }

    string? ogDescription = metaDescription;
    tmp = Model.GetProperty("openGraphDescription")?.GetValue();
    if (!string.IsNullOrEmpty((string?)tmp))
    {
        ogDescription = (string)tmp;
    }

    string? robots = "INDEX, FOLLOW";
    tmp = Model.GetProperty("metaRobots")?.GetValue();
    if (!string.IsNullOrEmpty((string?)tmp))
    {
        robots = (string)tmp;
    }

    string ogImageUrl = "";
    MediaWithCrops? ogImage = (MediaWithCrops?)Model.GetProperty("openGraphImage")?.GetValue();
    if (ogImage != null)
    {
        ogImageUrl = ogImage.Url(null, UrlMode.Absolute);
    }

    MenuSettings? menuSettings = null;
    if (Model.ContentType.Alias == "menuSettings")
    {
        menuSettings = (MenuSettings?)Model;
    }
    else
    {
        menuSettings = (MenuSettings?)Model.Root()?.Children()?.Where(x => x.ContentType.Alias == "menuSettings").FirstOrDefault();
    }
    CrifConfiguration? crifConfiguration = (CrifConfiguration?)Model.Root()?.Siblings()?.Where(x => x.ContentType.Alias == "crifConfiguration").FirstOrDefault();

    IPublishedContent? searchPage = Model.Root()?.Children()?.Where(x => (x.ContentType.Alias == "searchResults"))?.FirstOrDefault();
    string addParam = "";
    if (Umbraco.AssignedContentItem.ContentType.Alias == "soluzione"
        || Umbraco.AssignedContentItem.ContentType.Alias == "family"
        || Umbraco.AssignedContentItem.ContentType.Alias == "category"
        || Umbraco.AssignedContentItem.ContentType.Alias == "mercato")
    {
        addParam = "product=" + HttpUtility.UrlEncode(Umbraco.AssignedContentItem.Name) + "&requestType=" + HttpUtility.UrlEncode("servizi");
    }
    else if (Umbraco.AssignedContentItem.ContentType.Alias == "ricerche"
        || Umbraco.AssignedContentItem.ContentType.Alias == "academy"
        || Umbraco.AssignedContentItem.ContentType.Alias == "articolo")
    {
        addParam = "requestType=" + HttpUtility.UrlEncode("eventi");
    }
    /*Tracciamenti per sezione Business*/
    string? mercatiAssociati = "";
    if (Umbraco.AssignedContentItem.ContentType.Alias == "mercato")
    {
        mercatiAssociati = (string?)Umbraco.AssignedContentItem?.Name;
    }
    else if (Umbraco.AssignedContentItem.ContentType.Alias == "articolo"
        || Umbraco.AssignedContentItem.ContentType.Alias == "articoloStorieDiSuccesso"
        || Umbraco.AssignedContentItem.ContentType.Alias == "soluzione"
        || Umbraco.AssignedContentItem.ContentType.Alias == "family")
    {
        var mercArt = (IEnumerable<IPublishedContent>?)Model.GetProperty("mercatiDiRiferimento")?.GetValue();
        if (mercArt != null && mercArt.Any())
        {
            foreach (var merc in mercArt)
            {
                if (mercatiAssociati == "")
                {
                    mercatiAssociati = merc.Name;
                }
                else
                {
                    mercatiAssociati = mercatiAssociati + "-" + merc.Name;
                }
            }
        }
    }
}
@{
    Home? homePage = (Home?)Umbraco.ContentAtRoot()?.FirstOrDefault();
    bool isHome = Umbraco.AssignedContentItem.Name == "Home" ? true : false;
    bool isCreditScore = false;
    if (Umbraco.AssignedContentItem.Name != null)
    {
       isCreditScore = Umbraco.AssignedContentItem.Name == "Credit Score" ? true : false;
    }
}
<!doctype html>
<html lang="it">

<head>
    <meta charset="utf-8">
    <title>@metaTitle</title>
    <meta name="description" content="@metaDescription">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <meta property="og:url" content="@HtmlUtils.FormatUrl(HttpContextAccessor?.HttpContext?.Request)" />
    <meta property="og:title" content="@ogTitle" />
    <meta property="og:description" content="@ogDescription" />
    <meta property="og:image" content="@ogImageUrl" />

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>

    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Overpass:wght@400;700;900&display=swap"
          rel="stylesheet">

    <!-- custom styles -->
    <link href="~/assets/css/styles.css?v=@cssVer" rel="stylesheet">
    <link href="~/assets/css/home.css?v=@cssVer" rel="stylesheet">
    <link href="~/assets/css/responsive.css?v=@cssVer" rel="stylesheet" />

    <!-- swiper -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.0.7/css/swiper.min.css" rel="stylesheet">
    <!-- custom styles -->
    
</head>

<body>
    @{
        var firstLevelPages = homePage?.Children?.Where(x => (x.ContentType.Alias != "xmlSiteMap"));
    }
    <header id="navbar">
        <div class="container">
            <div class="row justify-content-between align-items-center align-items-lg-end gx-0">
                <div class="col-auto">
                    <a href="@homePage?.Url()"><img src="~/assets/img/logo-crif.svg" alt="crif-logo" class="logo"></a>
                </div>
                <div class="col">
                    <div class="row gx-0 justify-content-end align-items-end position-relative">

                        <div class="col menuWrp">
                            <div class="row">
                                <ul class="col-12 order-2 order-lg-1 topNav lineEffect text-lg-end py-2">
                                    @if (menuSettings != null && menuSettings?.CustomLinks != null)
                                    {
                                        foreach (BlockExternalLink singleLink in menuSettings.CustomLinks)
                                        {
                                            <li class="">
                                                <a class="" href="@singleLink?.ExternalLink?.Url" title="@singleLink?.ExternalLink?.Name"
                                                   target="@singleLink?.ExternalLink?.Target" data-link-type="menu" data-link="@singleLink?.ExternalLink?.Name" data-category="">
                                                    @singleLink?.ExternalLink?.Name
                                                </a>
                                            </li>
                                        }
                                    }
                                    <li class="hasDropdown">
                                        <a href="#" class="country-toggle">@Umbraco.GetDictionaryValue("country_label") <img src="~/assets/images/icons/globe-icon.svg" alt="" class="globe" /></a>
                                        <div class="container WorldWideDropdown dropDown">
                                            <div class="row justify-content-between w-100 mx-0">
                                                <div class="col-lg-3">
                                                    <h4>@menuSettings?.GlobalLabel</h4>
                                                    <a title="@menuSettings?.GlobalLink?.Name" href="@menuSettings?.GlobalLink?.Url" target="@menuSettings?.GlobalLink?.Target" class="orangeBtn  lineBtn w-fit">@menuSettings?.GlobalLink?.Name</a>

                                                </div>
                                                @if (menuSettings != null && menuSettings.ContinentAndCountries != null)
                                                {
                                                    foreach (BlockListItem item in menuSettings.ContinentAndCountries)
                                                    {
                                                        BlockMenuCountries continent = (BlockMenuCountries)item.Content;
                                                        var colLayout = continent?.CountriesSettings?.Count > 11 ? "double-column" : "";
                                                        <div class="col-6 col-md-2 col-xl-3">
                                                            <h4>@continent?.CountriesContinent</h4>
                                                            <ul class="@colLayout">
                                                                @if (continent != null && continent.CountriesSettings != null)
                                                                {
                                                                    foreach (BlockListItem elm in continent.CountriesSettings)
                                                                    {
                                                                        BlockSingleCountry country = (BlockSingleCountry)elm.Content;
                                                                        if (country.DoubleLink)
                                                                        {
                                                                            <li>
                                                                                <p class="">
                                                                                    @*<img src="@country?.CountryFlag?.Url()" alt="@HtmlUtils.GetImageAlt(country?.CountryFlag)">*@
                                                                                    @country?.CountryLabel
                                                                                </p>
                                                                                <ul class="">
                                                                                    @if (country != null && country.CountryLinks != null)
                                                                                    {
                                                                                        foreach (var countryLink in country.CountryLinks)
                                                                                        {
                                                                                            <li><a title="@countryLink.Name" href="@countryLink.Url" target="@countryLink.Target">@countryLink.Name</a></li>
                                                                                        }
                                                                                    }
                                                                                </ul>
                                                                            </li>
                                                                        }
                                                                        else
                                                                        {
                                                                            <li>
                                                                                @*<img src="@country?.CountryFlag?.Url()" alt="@HtmlUtils.GetImageAlt(country?.CountryFlag)">*@
                                                                                <a title="@country?.CountryLink?.Target" class="" href="@country?.CountryLink?.Url" target="@country?.CountryLink?.Target">

                                                                                    @country?.CountryLink?.Name
                                                                                </a>
                                                                            </li>
                                                                        }

                                                                    }
                                                                }
                                                            </ul>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </li>
                                </ul>
                                <div class="col order-1 order-lg-2 mainNav text-end">
                                    @if (firstLevelPages != null)
                                    {
                                        <ul class="navList d-lg-flex justify-content-end align-items-center">
                                            @foreach (IPublishedContent firstLevelPage in firstLevelPages)
                                            {
                                                bool hide1 = (firstLevelPage.Value("hideInMenu") != null) ? (bool)firstLevelPage.Value("hideInMenu") : false;
                                                bool hideChildren1 = (firstLevelPage.Value("hideChildrenInMenu") != null) ? (bool)firstLevelPage.Value("hideChildrenInMenu") : false;
                                                bool addSpecialChild1 = (firstLevelPage.Value("addSpecialChildren") != null) ? (bool)firstLevelPage.Value("addSpecialChildren") : false;
                                                var specialChild1 = (firstLevelPage.Value("specialChild") != null) ? firstLevelPage.Value("specialChild") : null;
                                                var specialChildLabel1 = (firstLevelPage.Value("specialChildLabel") != null) ? firstLevelPage.Value("specialChildLabel") : "";

                                                if (firstLevelPage.Children != null && firstLevelPage.Children.Any() && !hide1 && !hideChildren1)
                                                {
                                                    var pageLink = firstLevelPage.TemplateId == null ? "#" : firstLevelPage.Url();
                                                    var featurecard = false;
                                                    @if (menuSettings?.FeaturedCards != null)
                                                    {
                                                        foreach (BlockListItem item in menuSettings.FeaturedCards)
                                                        {
                                                            BlockFeaturedCard featuredCard = (BlockFeaturedCard)item.Content;
                                                            if (featuredCard?.KindOfContent?.GetType() == firstLevelPage?.GetType() && featuredCard?.FeaturedCard != null)
                                                            {
                                                                featurecard = true;

                                                            }
                                                        }
                                                    }
                                                    @if (featurecard)
                                                    {
                                                        <li class="hasDropdown hasCardDropdown">
                                                            <a title="@firstLevelPage.Name" class="" href="@pageLink" role="button" data-link-type="menu" data-link="@firstLevelPage.Name" data-link-destination="@pageLink" data-link-section="@firstLevelPage.Name">
                                                                @firstLevelPage.Name
                                                            </a>
                                                            <div class="dropDown cardDropdown">
                                                                <div class="row mx-0">
                                                                    <div class="col-12 col-md-4 px-0 dropDownList">
                                                                        <ul>
                                                                            @foreach (IPublishedContent secondLevelPage in firstLevelPage.Children)
                                                                            {
                                                                                bool hide2 = (secondLevelPage.Value("hideInMenu") != null) ? (bool)secondLevelPage.Value("hideInMenu") : false;
                                                                                bool hideChildren2 = (secondLevelPage.Value("hideChildrenInMenu") != null) ? (bool)secondLevelPage.Value("hideChildrenInMenu") : false;
                                                                                bool addSpecialChild2 = (secondLevelPage.Value("addSpecialChildren") != null) ? (bool)secondLevelPage.Value("addSpecialChildren") : false;
                                                                                var specialChild2 = (secondLevelPage.Value("specialChild") != null) ? secondLevelPage.Value("specialChild") : null;
                                                                                var specialChildLabel2 = (secondLevelPage.Value("specialChildLabel") != null) ? secondLevelPage.Value("specialChildLabel") : "";
                                                                                @if (secondLevelPage.Children != null && @secondLevelPage.Children.Any() && !hide2 && !hideChildren2)
                                                                                {
                                                                                    <li><a title="@secondLevelPage.Name" class="nav-link" href="@secondLevelPage.Url()" data-link-type="menu" data-link="@secondLevelPage.Name" data-link-destination="@secondLevelPage.Url()" data-link-section="@firstLevelPage.Name - @secondLevelPage.Name">@secondLevelPage.Name</a></li>

                                                                                }
                                                                                else if (!hide2)
                                                                                {
                                                                                    <li><a title="@secondLevelPage.Name" class="nav-link" href="@secondLevelPage.Url()" data-link-type="menu" data-link="@secondLevelPage.Name" data-link-destination="@secondLevelPage.Url()" data-link-section="@firstLevelPage.Name - @secondLevelPage.Name">@secondLevelPage.Name</a></li>
                                                                                }
                                                                            }
                                                                        </ul>
                                                                    </div>
                                                                    @if (menuSettings?.FeaturedCards != null)
                                                                    {
                                                                        foreach (BlockListItem item in menuSettings.FeaturedCards)
                                                                        {
                                                                            BlockFeaturedCard featuredCard = (BlockFeaturedCard)item.Content;
                                                                            if (featuredCard?.KindOfContent?.GetType() == firstLevelPage?.GetType() && featuredCard?.FeaturedCard != null)
                                                                            {
                                                                                foreach (BlockListItem singleCard in featuredCard.FeaturedCard)
                                                                                {
                                                                                    BlockCardProduct card = (BlockCardProduct)singleCard.Content;
                                                                                    <div class="col-12 col-md-8 dropDownCard">
                                                                                        <h5 class="featured-title">@Umbraco.GetDictionaryValue("menu_featured_card")</h5>
                                                                                        <div class="iconCardImg boxShadow m-0 h-100">
                                                                                            <div class="cardBody">
                                                                                                <img src="@card?.Icon?.Url()" alt="@HtmlUtils.GetImageAlt(card?.Icon)" class="iconImg" />
                                                                                                <h4 class="iconTitle colorBlue lineHeight2">@card?.Title</h4>
                                                                                                <p class="iconInfo mb-4 mb-lg-5">@card?.Text</p>
                                                                                                @if (card?.CallToAction != null)
                                                                                                {
                                                                                                    <a title="@card?.CallToAction?.Name" href="@card?.CallToAction?.Url" class="arrowBtn" data-link-type="page" data-link="@card?.Title" data-link-destination="@card?.CallToAction?.Url" data-link-section="menu">@card?.CallToAction?.Name</a>
                                                                                                }
                                                                                            </div>
                                                                                            <div class="imgWrapper">
                                                                                                <img src="@card?.BackgroundImage?.Url()" alt="@HtmlUtils.GetImageAlt(card?.BackgroundImage)" />
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>

                                                                                }
                                                                            }
                                                                        }
                                                                    }

                                                                </div>
                                                            </div>

                                                        </li>
                                                    }
                                                    else
                                                    {
                                                        <li class="hasDropdown">
                                                            <a title="@firstLevelPage.Name" class="" href="@pageLink" role="button" data-link-type="menu" data-link="@firstLevelPage.Name" data-link-destination="@pageLink" data-link-section="@firstLevelPage.Name">
                                                                @firstLevelPage.Name
                                                            </a>
                                                            <div class="dropDown">
                                                                <ul class="">
                                                                    @foreach (IPublishedContent secondLevelPage in firstLevelPage.Children)
                                                                    {
                                                                        bool hide2 = (secondLevelPage.Value("hideInMenu") != null) ? (bool)secondLevelPage.Value("hideInMenu") : false;
                                                                        bool hideChildren2 = (secondLevelPage.Value("hideChildrenInMenu") != null) ? (bool)secondLevelPage.Value("hideChildrenInMenu") : false;
                                                                        bool addSpecialChild2 = (secondLevelPage.Value("addSpecialChildren") != null) ? (bool)secondLevelPage.Value("addSpecialChildren") : false;
                                                                        var specialChild2 = (secondLevelPage.Value("specialChild") != null) ? secondLevelPage.Value("specialChild") : null;
                                                                        var specialChildLabel2 = (secondLevelPage.Value("specialChildLabel") != null) ? secondLevelPage.Value("specialChildLabel") : "";
                                                                        @if (secondLevelPage.Children != null && @secondLevelPage.Children.Any() && !hide2 && !hideChildren2)
                                                                        {
                                                                            <li><a title="@secondLevelPage.Name" class="nav-link" href="@secondLevelPage.Url()" data-link-type="menu" data-link="@secondLevelPage.Name" data-link-destination="@secondLevelPage.Url()" data-link-section="@firstLevelPage.Name - @secondLevelPage.Name">@secondLevelPage.Name</a></li>

                                                                        }
                                                                        else if (!hide2)
                                                                        {
                                                                            <li><a title="@secondLevelPage.Name" class="nav-link" href="@secondLevelPage.Url()" data-link-type="menu" data-link="@secondLevelPage.Name" data-link-destination="@secondLevelPage.Url()" data-link-section="@firstLevelPage.Name - @secondLevelPage.Name">@secondLevelPage.Name</a></li>
                                                                        }
                                                                    }
                                                                </ul>
                                                            </div>
                                                        </li>
                                                    }
                                                }
                                                else if (!hide1)
                                                {
                                                    <li class="">
                                                        <a title="@firstLevelPage.ContentType.Alias" class="" href="@firstLevelPage.Url()" data-link-type="menu" data-link="@firstLevelPage.Name" data-link-destination="@firstLevelPage.Url()" data-link-section="@firstLevelPage.ContentType.Alias">
                                                            @firstLevelPage.Name
                                                        </a>
                                                    </li>

                                                }
                                            }
                                            @if (searchPage != null)
                                            {
                                                <li class="d-none d-lg-block">
                                                    <button id="serch-lens" class="search-toggler blankBtn">
                                                        <img src="~/assets/images/icons/search-icon.svg" alt=""
                                                             class="w-100">
                                                    </button>
                                                </li>
                                            }
                                            @foreach (IPublishedContent firstLevelPage in firstLevelPages)
                                            {
                                                if (firstLevelPage.Name.ToString() == "Contact us")
                                                {

                                                    <li class="py-0 pe-0">
                                                        <a class="orangeBtn w-100 w-lg-auto" title="@firstLevelPage.ContentType.Alias" href="@firstLevelPage.Url()" data-link-type="menu" data-link="@firstLevelPage.Name" data-link-destination="@firstLevelPage.Url()" data-link-section="@firstLevelPage.ContentType.Alias">
                                                            @firstLevelPage.Name
                                                        </a>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-auto d-flex align-items-center endDiv d-lg-none">
                            @if (searchPage != null)
                            {
                                <span class="mx-3 mx-md-2 mx-xl-3">
                                    <button id="serch-lens" class="search-toggler blankBtn"><img src="~/assets/images/icons/search-icon.svg" alt="" class="w-100"></button>
                                </span>
                            }
                            @if (firstLevelPages != null)
                            {
                                @foreach (IPublishedContent firstLevelPage in firstLevelPages)
                                {
                                    if (firstLevelPage.Name.ToString() == "Contact us")
                                    {
                                        <span class="ms-2 ms-xl-3 d-none d-lg-inline">
                                            <a title="@firstLevelPage.ContentType.Alias" href="@firstLevelPage.Url()" data-link-type="menu" data-link="@firstLevelPage.Name" data-link-destination="@firstLevelPage.Url()" data-link-section="@firstLevelPage.ContentType.Alias" class="orangeBtn">@firstLevelPage.Name</a>
                                        </span>
                                        break;
                                    }
                                }
                            }
                            <button class="menuBtn d-lg-none"><span></span><span></span><span></span><span></span></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    @if (crifConfiguration != null && crifConfiguration.EnableGtm)
    {
        <noscript>
            <iframe src="https://www.googletagmanager.com/ns.html?id=@crifConfiguration.GtmCode"
                    height="0" width="0" style="display:none;visibility:hidden"></iframe>
        </noscript>
    }

    @if (searchPage != null)
    {
        <div class="search-ovl-wrp">
            <section class="search-ovl">
                <div class="container-lg">
                    <div class="search">
                        <form action="@searchPage.Url()" method="GET">
                            <div class="search-wrapper">
                                <label for="search" class="form-label">@Umbraco.GetDictionaryValue("search", "Cerca")</label>
                                <input type="text" class="form-control" id="search" name="s" placeholder="@Umbraco.GetDictionaryValue("search_label", "Cosa stai cercando" )">
                                <button type="submit">Search</button>
                            </div>
                        </form>
                    </div>
                </div>
            </section>
        </div>
    }

    @RenderBody()


    <footer class="">
        <div class="bgBlue pb-0 pt-5 pb-md-5">
            <div class="container">
                <div class="row flex-row-reverse align-items-center py-3">
                    <div class="col-12 col-lg-4">
                        <div class="d-md-flex justify-content-center d-lg-block text-center text-md-start text-lg-center px-lg-5 mb-5 mb-lg-0">
                            <img src="~/assets/images/icons/icon-envelope.svg" alt="" class="envelopeIcon" />
                            <div class="ms-4 ms-lg-0">
                                <h4 class="my-4 mt-md-0 mt-lg-3 colorWhite footerTitle">How may we assist you?</h4>
                                @if (firstLevelPages != null)
                                {
                                    @foreach (IPublishedContent firstLevelPage in firstLevelPages)
                                    {
                                        if (firstLevelPage.Name.ToString() == "Contact us")
                                        {
                                            <a title="@firstLevelPage.ContentType.Alias" href="@firstLevelPage.Url()" data-link-type="menu" data-link="@firstLevelPage.Name" data-link-destination="@firstLevelPage.Url()" data-link-section="@firstLevelPage.ContentType.Alias" class="orangeBtn whiteBorder mt-lg-4 mx-auto mx-md-0 mx-lg-auto">@firstLevelPage.Name</a>

                                        }
                                    }
                                }
                            </div>
                        </div>
                    </div>

                    <div class="col-12 col-sm-12 col-lg-8">
                        <div class="row">
                            @if (menuSettings.ImportantLinks != null)
                            {
                                <div class="col-12 col-md-4">
                                    <div class="footerLinks lineEffect">
                                        <h5 class="colorWhite my-2 mb-md-4">Important Links</h5>
                                        <ul>
                                            @foreach (var a in menuSettings.ImportantLinks)
                                            {
                                                <li><a href="@a.ExternalLink.Url">@a.ExternalLink.Name</a></li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            }
                            @if (menuSettings.BusinessNeeds != null)
                            {
                                <div class="col-12 col-md-4">
                                    <div class="footerLinks lineEffect">
                                        <h5 class="colorWhite my-2 mb-md-4">Business Needs</h5>
                                        <ul>
                                            @foreach (var a in menuSettings.BusinessNeeds)
                                            {
                                                <li><a href="@a.ExternalLink.Url">@a.ExternalLink.Name</a></li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            }
                            @if (menuSettings.MoreInformation != null)
                            {
                                <div class="col-12 col-md-4">
                                    <div class="footerLinks lineEffect">
                                        <h5 class="colorWhite my-2 mb-md-4">More Information</h5>
                                        <ul>
                                            @foreach (var a in menuSettings.MoreInformation)
                                            {
                                                @if(a.ExternalLink != null)
                                                {
                                                <li><a href="@a.ExternalLink.Url">@a.ExternalLink.Name</a></li>
                                                }
                                                }
                                        </ul>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="py-4">
            <div class="container">
                <div class="row justify-content-between align-items-center text-center text-md-start">
                    <div class="col-12 col-md-6">

                        <img src="~/assets/img/logo-crif.svg" alt="@HtmlUtils.GetImageAlt(menuSettings?.FooterLogo)" class="footerLogo" />
                    </div>

                    @if (menuSettings != null && menuSettings.ShowSocial)
                    {
                        <div class="col-12 col-md-6">
                            @if (crifConfiguration != null && crifConfiguration?.SocialLinks != null)
                            {
                                <div class="socialLinks">
                                    @menuSettings.SocialLabel
                                    <ul class="ms-2">
                                        @foreach (BlockSocialLink singleLink in crifConfiguration.SocialLinks)
                                        {
                                            @if (singleLink.CustomSocial)
                                            {
                                                <li><a title="@singleLink?.CustomSocialLabel" href="@singleLink?.CustomSocialLink?.Url" class=" @singleLink?.CustomSocialLabel"><img src="@singleLink?.CustomSocialIconDark?.Url()" alt="@singleLink?.CustomSocialLabel"></a></li>
                                            }
                                            else
                                            {
                                                var imgName = "/assets/img/" + @singleLink?.Social + ".svg";
                                                <li><a title="@singleLink?.Social" href="@singleLink?.SocialLink?.Url" class=" @singleLink?.Social"><img src="@imgName" alt="@singleLink?.Social"></a></li>
                                            }
                                        }
                                    </ul>
                                </div>
                            }
                        </div>
                    }
                    <div class="col-12 col-md-6 extraLinks justify-content-start">
                        <span>@menuSettings?.Copyright</span>
                        @*<span>© Copyright <span id="footerYear"></span> - CRIF High Mark. All rights reserved</span>*@
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="extraLinks">
                            <ul class="lineEffect">
                                @if (menuSettings != null && menuSettings?.FooterCustomLinks != null)
                                {
                                    @foreach (BlockExternalLink singleLink in menuSettings.FooterCustomLinks)
                                    {
                                        <li class="">
                                            <a title="@singleLink?.ExternalLink?.Name" class="" href="@singleLink?.ExternalLink?.Url" target="@singleLink?.ExternalLink?.Target">@singleLink?.ExternalLink?.Name</a>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.5.1/js/swiper.min.js"></script>
    <script src="~/assets/script/script.js?v=@cssVer"></script>
    <!-- search modal -->
    @if (searchPage != null)
    {
        <div class="search-ovl">
            <section>
                <div class="container-lg border-bottom-mobile d-block  d-lg-none">
                    <div class="menu-header">
                        <div class="menu-brand">
                            <img src="~/assets/img/logo-crif.svg" alt="crif-logo">
                        </div>
                        <button class="menu-close">Close search</button>
                    </div>
                </div>
                <div class="container-lg">
                    <div class="search">
                        <form action="@searchPage.Url()" method="GET">
                            <div class="search-wrapper">
                                <label for="search" class="form-label">@Umbraco.GetDictionaryValue("search", "Cerca")</label>
                                <input type="text" class="form-control" id="search" name="s" placeholder="@Umbraco.GetDictionaryValue("search_label", "Cosa stai cercando" )">
                                <button type="submit">Search</button>
                            </div>
                        </form>
                    </div>
                </div>
            </section>
        </div>
    }

    <!-- mobile menu -->
    @*<div id="mobile-menu-ovl" class="menu-ovl">
    <section>
    <div class="container-fluid border-bottom">
    <div class="menu-header">
    <div class="menu-brand">
    <img src="~/assets/img/logo-crif.svg" alt="crif-logo">
    </div>
    <button class="menu-close">Close menu</button>
    </div>
    </div>
    @if (firstLevelPages != null)
    {
    @foreach (var firstLevelPage in firstLevelPages)
    {
    bool hide1 = (firstLevelPage.Value("hideInMenu") != null) ? (bool)firstLevelPage.Value("hideInMenu") : false;
    bool hideChildren1 = (firstLevelPage.Value("hideChildrenInMenu") != null) ? (bool)firstLevelPage.Value("hideChildrenInMenu") : false;
    bool addSpecialChild1 = (firstLevelPage.Value("addSpecialChildren") != null) ? (bool)firstLevelPage.Value("addSpecialChildren") : false;
    var specialChild1 = (firstLevelPage.Value("specialChild") != null) ? firstLevelPage.Value("specialChild") : null;
    var specialChildLabel1 = (firstLevelPage.Value("specialChildLabel") != null) ? firstLevelPage.Value("specialChildLabel") : "";
    if (firstLevelPage.Children != null && firstLevelPage.Children.Any() && !hide1 && !hideChildren1)
    {
    <div class="container-fluid px-4 border-bottom bg-white">
    <nav>
    <h5 class="menu-heading"><a title="@firstLevelPage.Name" class="nav-link" href="@firstLevelPage.Url()" data-link-type="menu" data-link="@firstLevelPage.Name" data-link-destination="@firstLevelPage.Url()" data-link-section="@firstLevelPage.ContentType.Alias">@firstLevelPage.Name</a></h5>
    <ul>
    @foreach (var secondLevelPage in firstLevelPage.Children)
    {
    bool hide2 = (secondLevelPage.Value("hideInMenu") != null) ? (bool)secondLevelPage.Value("hideInMenu") : false;
    bool hideChildren2 = (secondLevelPage.Value("hideChildrenInMenu") != null) ? (bool)secondLevelPage.Value("hideChildrenInMenu") : false;
    if (secondLevelPage.Children != null && secondLevelPage.Children.Any() && !hide2 && !hideChildren2)
    {
    <li class="nav-item d-flex row">
    <a title="@secondLevelPage.Name" class="nav-link px-3 item-with-child" href="@secondLevelPage.Url()" data-link-type="menu" data-link="@secondLevelPage.Name" data-link-destination="@secondLevelPage.Url()" data-link-section="@firstLevelPage.ContentType.Alias - @secondLevelPage.ContentType.Alias">@secondLevelPage.Name</a>
    <input id="check-@secondLevelPage.Name" type="checkbox" class="d-none checkbox-menu-ovl" />
    <label class="menu-toggle-icon mt-3" for="check-@secondLevelPage.Name">
    </label>
    <div class="menu-ovl-expandable modal-submenu">
    <div class="modal-submenu-head row py-3">
    <label class="modal-sumbenu-navigation" for="check-@secondLevelPage.Name"></label>
    <div class="modal-submenu-title col-11">@secondLevelPage.Name</div>
    </div>
    <ul class="">
    @foreach (var thirdLevelPage in secondLevelPage.Children)
    {
    bool hide3 = (thirdLevelPage.Value("hideInMenu") != null) ? (bool)thirdLevelPage.Value("hideInMenu") : false;
    bool hideChildren3 = (thirdLevelPage.Value("hideChildrenInMenu") != null) ? (bool)thirdLevelPage.Value("hideChildrenInMenu") : false;
    if (thirdLevelPage.Children != null && thirdLevelPage.Children.Any() && !hide3 && !hideChildren3)
    {
    <li class="nav-item d-flex row">
    <a title="@thirdLevelPage.Name" class="nav-link px-3 item-with-child" href="@thirdLevelPage.Url()" data-link-type="menu" data-link="@thirdLevelPage.Name" data-link-destination="@thirdLevelPage.Url()" data-link-section="@firstLevelPage.ContentType.Alias - @secondLevelPage.ContentType.Alias -@thirdLevelPage.ContentType.Alias">@thirdLevelPage.Name</a>
    <input id="check-@thirdLevelPage.Name" type="checkbox" class="d-none checkbox-menu-ovl" />
    <label class="menu-toggle-icon mt-3" for="check-@thirdLevelPage.Name">
    </label>
    <div class="menu-ovl-expandable modal-submenu modal-subsubmenu">
    <div class="modal-submenu-head row py-3">
    <label class="modal-sumbenu-navigation" for="check-@thirdLevelPage.Name"></label>
    <div class="modal-submenu-title col-11">@thirdLevelPage.Name</div>
    </div>
    <ul class="">
    @foreach (var fourthLevelPage in thirdLevelPage.Children)
    {
    bool hide4 = (fourthLevelPage.Value("hideInMenu") != null) ? (bool)fourthLevelPage.Value("hideInMenu") : false;
    bool hideChildren4 = (fourthLevelPage.Value("hideChildrenInMenu") != null) ? (bool)fourthLevelPage.Value("hideChildrenInMenu") : false;
    if (!hide4)
    {
    <li class="nav-item">
    <a title="@fourthLevelPage.Name" class="nav-link" href="@fourthLevelPage.Url()" data-link-type="menu" data-link="@fourthLevelPage.Name" data-link-destination="@fourthLevelPage.Url()" data-link-section="@firstLevelPage.ContentType.Alias - @secondLevelPage.ContentType.Alias - @thirdLevelPage.ContentType.Alias header @fourthLevelPage.ContentType.Alias">@fourthLevelPage.Name</a>
    </li>
    }
    }
    </ul>
    </div>
    </li>
    }
    else if (!hide3)
    {
    <li class="nav-item">
    <a title="@thirdLevelPage.Name" class="nav-link" href="@thirdLevelPage.Url()" data-link-type="menu" data-link="@thirdLevelPage.Name" data-link-destination="@thirdLevelPage.Url()" data-link-section="@firstLevelPage.ContentType.Alias - @secondLevelPage.ContentType.Alias - @thirdLevelPage.ContentType.Alias">@thirdLevelPage.Name</a>
    </li>
    }
    }
    </ul>
    </div>
    </li>
    }
    else if (!hide2)
    {
    <li class="nav-item">
    <a title="@secondLevelPage.Name" class="nav-link px-2" href="@secondLevelPage.Url()" data-link-type="menu" data-link="@secondLevelPage.Name" data-link-destination="@secondLevelPage.Url()" data-link-section="@firstLevelPage.ContentType.Alias - @secondLevelPage.ContentType.Alias">@secondLevelPage.Name</a>
    </li>
    }
    }
    @if (addSpecialChild1 && specialChild1 != null && specialChildLabel1 != "")
    {
    IPublishedContent spChild1 = (IPublishedContent)specialChild1;
    <li class="nav-item"><a title="@spChild1.Name" class="nav-link px-2" href="@spChild1.Url()" data-link-type="menu" data-link="@spChild1.Name" data-link-destination="@spChild1.Url()" data-link-section="@firstLevelPage.Name - @spChild1.Name">@specialChildLabel1</a></li>
    }
    </ul>
    </nav>
    </div>
    }
    else if (!hide1)
    {
    <div class="container-fluid px-4 border-bottom bg-white">
    <nav>
    <h5 class="menu-heading"><a title="@firstLevelPage.Name" class="nav-link" href="@firstLevelPage.Url()" data-link-type="menu" data-link="@firstLevelPage.Name" data-link-destination="@firstLevelPage.Url()" data-link-section="@firstLevelPage.ContentType.Alias">@firstLevelPage.Name</a></h5>
    </nav>
    </div>

    }
    }
    }
    <div class="container-fluid px-4 pt-3 bg-white">
    <a title="@menuSettings?.CtaSettings?.Name" href="@menuSettings?.CtaSettings?.Url" class="btn btn-primary w-100 mb-3" data-link-type="cta" data-link="@menuSettings?.CtaSettings?.Name" data-link-destination="@menuSettings?.CtaSettings?.Url" data-link-section="header">@menuSettings?.CtaSettings?.Name</a>

    <nav>
    <ul class="secondary-menu">
    @{
    if (menuSettings != null && menuSettings?.CustomLinks != null)
    {
    foreach (BlockExternalLink singleLink in menuSettings.CustomLinks)
    {
    <li class="nav-item country-toggle">
    <a title="@singleLink?.ExternalLink?.Name" class="nav-link" href="@singleLink?.ExternalLink?.Url" target="@singleLink?.ExternalLink?.Target">@singleLink?.ExternalLink?.Name</a>
    </li>
    }
    }
    if (menuSettings != null && menuSettings.ContinentAndCountries != null)
    {
    <li class="nav-item">
    <a class="nav-link country-mobile-toggle" href="@menuSettings.Url()">
    @Umbraco.GetDictionaryValue("country_label")
    </a>
    </li>
    }

    }
    </ul>
    </nav>
    </div>
    </section>
    </div>*@

    @*<script>
    //Reduce size of menu on scroll
    $(function () {
    $(window).on("scroll touchmove", function () {
    $('header').toggleClass('tiny', $(document).scrollTop() > 10);
    if ($(document).scrollTop() > 10) {
    $('header .navbar.secondary-menu').removeClass('d-lg-flex');
    } else {
    $('header .navbar.secondary-menu').addClass('d-lg-flex');
    }
    });
    });
    </script>
    <script>
    //Open and Close the Country Menu in top header
    $(function () {
    $('.country-toggle').click(function () {
    $('.mega-toggle').parent().removeClass('open');
    $('.sub-toggle').parent().removeClass('open');
    $('.sub-sub-toggle').parent().removeClass('open');
    $('.search-ovl').removeClass('open');
    $(this).parent().toggleClass('open');
    });
    });
    //Open and close of the megamenu in Header
    $(function () {
    $('.mega-toggle').hover(function (f) {
    f.preventDefault();
    $('.mega-toggle').not(this).parent().removeClass('open');
    $('.sub-toggle').parent().removeClass('open');
    $('.sub-sub-toggle').parent().removeClass('open');
    $('.search-ovl').removeClass('open');
    //$(this).parent().toggleClass('open');
    });
    $('.mega-toggle').mouseleave(function (f) {
    f.preventDefault();
    $(this).parent().removeClass('open');
    });
    $('.mega-toggle').mouseenter(function (f) {
    f.preventDefault();
    $(this).parent().addClass('open');
    });
    $('.mega-menu').hover(function () {
    $(this).parent().toggleClass('open');
    });
    $('.mega-menu li a.nav-link, .mega-menu li button').hover(function () {
    $(this).parent().toggleClass('open');
    });
    $('.sub-menu').hover(function () {
    $(this).parent().toggleClass('open');
    });
    $('.sub-sub-menu').hover(function () {
    $(this).parent().toggleClass('open');
    });
    });
    </script>
    *@

    <script>
        $(function () {
            $('.search-toggler').click(function () {
                $('.mega-toggle').parent().removeClass('open');
                $('.menu-ovl').removeClass('open');
                $('.search-ovl').toggleClass('open');
            });
        });
        $(function () {
            $('.menu-toggler').click(function () {
                $('.menu-ovl').addClass('open');
            });
        });
        $(function () {
            $('.menu-close').click(function () {
                $('.menu-ovl').removeClass('open');
                $('.search-ovl').removeClass('open');
            });
        });
    </script>

    @* <script>
    var swiper = new Swiper(".trends-carousel", {
    loop: false,
    slidesPerView: "1",
    spaceBetween: 16,
    pagination: {
    el: '.swiper-pagination',
    type: 'bullets',
    clickable: true,
    },
    breakpoints: {
    992: {
    loop: false,
    slidesPerView: 2,
    spaceBetween: 64,
    },
    },
    });
    </script>

    <script>
    var swiper = new Swiper(".kecards-carousel", {
    loop: false,
    slidesPerView: "1",
    spaceBetween: 16,
    pagination: {
    el: '.swiper-pagination',
    type: 'bullets',
    clickable: true,
    },
    breakpoints: {
    992: {
    loop: false,
    slidesPerView: 3,
    spaceBetween: 32,
    },
    },
    });
    </script>

    <script>
    var swiper = new Swiper(".partners-carousel", {
    loop: false,
    slidesPerView: "3",
    spaceBetween: 0,
    breakpoints: {
    992: {
    loop: false,
    slidesPerView: 5,
    spaceBetween: 0,
    },
    },
    });
    </script>
    <script>
    var swiper = new Swiper(".countries-carousel", {
    loop: false,
    slidesPerView: "3",
    spaceBetween: 8,

    });
    </script>


    <script>
    $(function () {
    $('.play-video').click(function () {
    if ($(this).prev().hasClass('video')) {
    $(this).prev().trigger('play')
    $(this).prev().attr('controls', true);
    $(this).addClass('d-none');
    var vTitle = $("video.video").attr("data-title")
    dataLayer.push({
    'event': 'video_start',
    'videoTitle': vTitle
    })
    }
    });
    });
    </script>

    <script>
    function visible(partial) {
    var $t = partial,
    $w = jQuery(window),
    viewTop = $w.scrollTop(),
    viewBottom = viewTop + $w.height(),
    _top = $t.offset().top,
    _bottom = _top + $t.height(),
    compareTop = partial === true ? _bottom : _top,
    compareBottom = partial === true ? _top : _bottom;
    return ((compareBottom <= viewBottom) && (compareTop >= viewTop) && $t.is(':visible'));

    }

    // counter up

    var numbers = [];
    $('.counter-number span').each(function () {
    numbers.push($(this).text())
    })
    function getOriginalNumbers(index) {
    return numbers[index];
    }
    $(window).scroll(function () {
    console.log(getOriginalNumbers())
    if (visible($('.counter-number'))) {
    if ($('.counter-number span').hasClass('counter-loaded')) return;
    $('.counter-number span').addClass('counter-loaded');
    $('.counter-number span').each(function (index) {
    var $this = $(this);
    jQuery({ Counter: 0 }).animate({ Counter: getOriginalNumbers(index) }, {
    duration: 1000,
    easing: 'swing',
    step: function () {
    $this.text(Math.ceil(this.Counter));
    }
    });
    });
    }
    })
    </script>

    <script>
    if ($('.internal-navigation.sticky-top')) {
    $('.internal-navigation.sticky-top li.nav-item.internal-link ').each(function () {
    $(this).click(function (event) {
    event.preventDefault();
    //$(this).addClass('current')
    //$('.internal-navigation.sticky-top li.nav-item.internal-link ').not(this).removeClass('current')
    var anchor = $(this).children(":first").attr("href");
    if ($(anchor) != null && $(anchor).offset() != undefined) {
    $('html, body').animate({ scrollTop: $(anchor).offset().top - 120 }, 'slow');
    }
    })
    })

    $(window).scroll(function () {
    // This is then function used to detect if the element is scrolled into view
    function elementScrolled(elem) {
    var docViewTop = $(window).scrollTop();
    var docViewBottom = docViewTop + $(window).height();
    var elemTop = 0;
    if (elem != null && $(elem).offset() != undefined) {
    elemTop = $(elem).offset().top;
    }
    return ((elemTop <= docViewBottom) && (elemTop >= docViewTop));
    }
    $('.internal-navigation.sticky-top li.nav-item.internal-link ').each(function () {
    var target = $(this).children().attr("href");
    if (elementScrolled(target)) {
    $(this).addClass('current')
    $('.internal-navigation.sticky-top li.nav-item.internal-link ').not(this).removeClass('current')
    return false;
    }

    });
    });
    }
    </script>

    <script>
    $("#filtered-tags-list select").change(function () {
    $("#filtered-tags-list form").submit()
    })
    </script>

    <script>
    $("#filtered-list select").change(function () {
    $("#filtered-list form").submit()
    })
    </script>

    <script>
    $("div .social.link").click(function (event) {
    event.preventDefault();
    navigator.clipboard.writeText($(this).attr("data-url"));
    });
    </script>

    <script>
    var listOfAnimation = document.querySelectorAll(".internal-heading .caption h1,.internal-heading .caption p , .hp-heading .caption h2, .hp-heading .caption a, .textonly-heading .caption h1, .textonly-heading .caption p, .internal-heading .caption h2, .benefit .custom-card, .cards-list .custom-card, .classic-cards-block .classic-card,  .custom-card.industry, .key-point-img, .solution .custom-card, .consumer-services .custom-card, .trend-topics .custom-card, .history-year img");
    listOfAnimation.forEach(function (element) {
    new Waypoint({
    element: element,
    handler: function () { element.classList.add('active') },
    group: 'animations',
    offset: '98%'
    })
    })
    </script>*@
    <!--script>
        const btn = document.getElementById('search-lens');
        btn.addEventListener('click', function handleClick() {
            setTimeout(function(){
                var input = document.getElementById('search');
                input.setSelectionRange(0, 0);
                input.focus();
            }, 500);
        });
    </script-->
    <script type="application/ld+json">
        var breadcrum = "";
        {
            "@@context": "https://schema.org",
            "@@type": "BreadcrumbList",
            "itemListElement": [
        @for (int j = 0; j < Model.AncestorsOrSelf().Count(); j++)
        {
            var content = Model.AncestorsOrSelf().Reverse().ElementAt(j);
            var counter = content?.Ancestors().Count() + 1;
            if (j == Model.AncestorsOrSelf().Count() - 1)
            {
                <text>
                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                    "@@type": "ListItem",
                                                                                                                                                                                                                                                                                                                                                                                                    "position": @counter,
                                                                                                                                                                                                                                                                                                                                                                                                    "name": "@content?.Name",
                                                                                                                                                                                                                                                                                                                                                                                                    "item": "@content?.Url(mode: UrlMode.Absolute)"
                                                                                                                                                                                                                                                                                                                                                                                                }
                </text>
            }
            else
            {
                <text>
                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                    "@@type": "ListItem",
                                                                                                                                                                                                                                                                                                                                                                                                    "position": @counter,
                                                                                                                                                                                                                                                                                                                                                                                                    "name": "@content?.Name",
                                                                                                                                                                                                                                                                                                                                                                                                    "item": "@content?.Url(mode: UrlMode.Absolute)"
                                                                                                                                                                                                                                                                                                                                                                                                },
                </text>
            }
        }
            ]
        }
    </script>
    @if (isHome)
    {
        <script type="application/ld+json">
            {
            "@@context": "http://schema.org",
            "@@type": "SiteNavigationElement",
            "name": [
            @foreach (var content in Model.AncestorOrSelf(1).Children)
            {
                <text>
                                                                                                                                                                                                                        "@content.Name",
                </text>
            }
            ],
            "url": [
            @foreach (var content in Model.AncestorOrSelf(1).Children)
            {
                <text>
                                                                                                                                                                                                                        "@content.Url(mode: UrlMode.Absolute)",
                </text>
            }
            ]
            }
        </script>
    }
    <script>
        $("video.video").on("ended", function () {
            var vTitle = $("video.video").attr("data-title")
            dataLayer.push({
                'event': 'video_complete',
                'videoTitle': vTitle
            })
        })
    </script>

    <script>
        $('.arrowBtn').click(function () {
            debugger;
            // Hide all other card details in the modal
            $('.leaderInfopopup').hide();

            // Find the specific card details related to the clicked link
            var selectedCard = '.' + $(this).attr('data-cardno');

            // Show only the specific card details in the modal
            $(selectedCard).show();
        });
    </script>

</body>


</html>
